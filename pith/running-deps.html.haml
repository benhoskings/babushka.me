---
layout: "/_layout.html.haml"
title: Running Deps
---

:md
  Running deps with babushka is simple. The form of the dep names varies depending on where the deps are located, but the way they're run is always the same.

  ## Referencing Deps & Sources

  If the dep you're running is within one of babushka's standard load paths (read about them [here](/finding-deps)), then you can just reference the dep directly.

      $ babushka homebrew

  There are many more deps out there, though, which you might like to use ([when you trust them!](/finding-deps)). You can run a dep from any source that's published using babushka's convention automatically:

      $ babushka benhoskings:TextMate.app

  That runs the dep called 'TextMate.app' in my source, i.e. the source that's found here:

      http://github.com/benhoskings/babushka-deps


  ## A runtime example

  Here's what babushka does when you run 'Cucumber.tmbundle' from my source, to install the Cucumber TextMate bundle. Each step of the way, it's checking what should be done, and only doing the bits that aren't done already. (In babushka parlance, it's only meeting deps that aren't already met.)

  If you already have TextMate installed, babushka notices and just installs the bundle.

      $ babushka benhoskings:Cucumber.tmbundle
      Cucumber.tmbundle {
        TextMate.app {
          Found TextMate.app in /Applications.
        } ✓ TextMate.app
        meet {
          Cloning git://github.com/bmabey/cucumber-tmbundle.git... at bb89925, done.
          Telling TextMate to reload bundles... done.
        }
      } ✓ Cucumber.tmbundle


  But if you don't have TextMate, that's an unmet dependency, so it gets pulled in too.

      $ babushka benhoskings:Cucumber.tmbundle
      Cucumber.tmbundle {
        TextMate.app {
          Couldn't find TextMate.app.
          meet {
            ✓ Already downloaded TextMate_1.5.10.zip.
            Extracting TextMate_1.5.10.zip... done.
            Found TextMate.app, copying to /Applications... done.
            Cleaning up... done.
          }
          Found TextMate.app in /Applications.
        } ✓ TextMate.app
        meet {
          Cloning git://github.com/bmabey/cucumber-tmbundle.git... at bb89925, done.
          Telling TextMate to reload bundles... done.
        }
      } ✓ Cucumber.tmbundle


  ## Passing arguments to deps

  Deps are, in some ways, like a method call - the outer block of the dep is run at the point the dep is defined, which happens lazily as it is invoked from its parent, or from the commandline if it's the top-level dep.

  Like methods, deps can have parameters, and when you call the dep, you can pass values for those parameters, just like supplying arguments to a method call.

  There are more details on dep parameters in the section on [writing deps](/writing-deps). For now, the important part is that deps can always accept arguments, whether they're run directly from the commandline, or required from another dep.

  To pass arguments on the commandline, use `name=value` pairs:

      $ babushka benhoskings:push! ref=HEAD remote=production

  To pass arguments to a dep when you require it, use babushka's `String#with` method.

:preruby
  dep 'custom nginx config' do
    requires 'benhoskings:nginx.src'.with(version: '1.0.8')
    # ...
  end

:md
  You don't have to supply values for a dep's parameters when you call it; dep parameters can be unset, and will lazily prompt for values as required (i.e. at the point babushka attempts to use an unset parameter's value). You can find more details about dep parameters in the [writing deps](/writing-deps) section.
